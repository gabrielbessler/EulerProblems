'''Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

Triangle	 	Tn=n(n+1)/2	 	1, 3, 6, 10, 15, ...
Pentagonal	 	Pn=n(3n−1)/2	1, 5, 12, 22, 35, ...
Hexagonal	 	Hn=n(2n−1)	 	1, 6, 15, 28, 45, ...
It can be verified that T285 = P165 = H143 = 40755.

Find the next triangle number that is also pentagonal and hexagonal.
'''

import time

START_TIME = time.time()

pentagonal = lambda n: n * (3*n-1) / 2  # For a given index, in the middle
hexagonal = lambda n: n * (2 * n - 1)  # For a given index, always the biggest

#We know the starting indeces

hexagonal_index = 146
pentagonal_index = 166

#From these, we calculate the starting values

hVal = hexagonal(hexagonal_index)
pVal = pentagonal(pentagonal_index)

#However, note that every hexagonal number is a triangular number
#This means we only need to find a hexagonal number that is equal to a pentagonal number

while True:
    # First we compare the hexagonal numbers to the pentagonal numbers
    if hVal > pVal:
        pentagonal_index += 1
    elif hVal < pVal:
        hexagonal_index += 1
    else:
        #we greatly improve runtime by using this else statment rather than
        #checking if the values are equal in the while (cond)
        break

    hVal = hexagonal(hexagonal_index)
    pVal = pentagonal(pentagonal_index)

print(hVal)
print(time.time() - START_TIME)  #Runs in 0.06 seconds

